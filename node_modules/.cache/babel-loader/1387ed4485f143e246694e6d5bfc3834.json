{"ast":null,"code":"import { RECEIVE_USERS } from '../actions/users';\nimport { SAVE_QUESTION, ANSWER_QUESTION } from '../actions/questions';\nexport default function users(state = {}, action) {\n  let authedUser;\n\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return { ...state,\n        ...action.users\n      };\n\n    case SAVE_QUESTION:\n      authedUser = action.question[Object.keys(action.question)[0]].author;\n      return { ...state,\n        [authedUser]: { ...state[authedUser],\n          questions: state[authedUser].questions.concat(action.question)\n        }\n      };\n\n    case ANSWER_QUESTION:\n      authedUser = action.answer.authedUser;\n      return { ...state,\n        [authedUser]: { ...state[authedUser],\n          answers: {\n            [action.answer.qid]: action.answer.answer,\n            ...state[authedUser].answers\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-React-WouldYouRather/src/reducers/users.js"],"names":["RECEIVE_USERS","SAVE_QUESTION","ANSWER_QUESTION","users","state","action","authedUser","type","question","Object","keys","author","questions","concat","answer","answers","qid"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,sBAA/C;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AAC9C,MAAIC,UAAJ;;AACA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAKP,aAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEH,WAAGC,MAAM,CAACF;AAFP,OAAP;;AAIJ,SAAKF,aAAL;AACIK,MAAAA,UAAU,GAAGD,MAAM,CAACG,QAAP,CAAgBC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACG,QAAnB,EAA6B,CAA7B,CAAhB,EAAiDG,MAA9D;AACA,aAAO,EACH,GAAGP,KADA;AAEH,SAACE,UAAD,GAAc,EACV,GAAGF,KAAK,CAACE,UAAD,CADE;AAEVM,UAAAA,SAAS,EAAER,KAAK,CAACE,UAAD,CAAL,CAAkBM,SAAlB,CAA4BC,MAA5B,CAAmCR,MAAM,CAACG,QAA1C;AAFD;AAFX,OAAP;;AAOJ,SAAKN,eAAL;AACII,MAAAA,UAAU,GAAGD,MAAM,CAACS,MAAP,CAAcR,UAA3B;AAEA,aAAO,EACH,GAAGF,KADA;AAEH,SAACE,UAAD,GAAc,EACV,GAAGF,KAAK,CAACE,UAAD,CADE;AAEVS,UAAAA,OAAO,EAAE;AACL,aAACV,MAAM,CAACS,MAAP,CAAcE,GAAf,GAAqBX,MAAM,CAACS,MAAP,CAAcA,MAD9B;AAEL,eAAGV,KAAK,CAACE,UAAD,CAAL,CAAkBS;AAFhB;AAFC;AAFX,OAAP;;AAUJ;AACI,aAAOX,KAAP;AA7BR;AA+BH","sourcesContent":["import { RECEIVE_USERS } from '../actions/users';\r\nimport { SAVE_QUESTION, ANSWER_QUESTION } from '../actions/questions';\r\n\r\nexport default function users(state = {}, action) {\r\n    let authedUser;\r\n    switch(action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state,\r\n                ...action.users\r\n            };\r\n        case SAVE_QUESTION:\r\n            authedUser = action.question[Object.keys(action.question)[0]].author;\r\n            return {\r\n                ...state,\r\n                [authedUser]: {\r\n                    ...state[authedUser],\r\n                    questions: state[authedUser].questions.concat(action.question)\r\n                }\r\n            };\r\n        case ANSWER_QUESTION:\r\n            authedUser = action.answer.authedUser;\r\n\r\n            return {\r\n                ...state,\r\n                [authedUser]: {\r\n                    ...state[authedUser],\r\n                    answers: {\r\n                        [action.answer.qid]: action.answer.answer,\r\n                        ...state[authedUser].answers,\r\n                    }\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}