{"ast":null,"code":"var _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-React-WouldYouRather/src/components/QuestionData.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, ProgressBar, Badge } from 'react-bootstrap';\nimport './styles/QuestionData.css';\n\nconst QuestionData = ({\n  option,\n  totalVotes,\n  authedUser\n}) => {\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: 'border rounded my-3 p-3 ' + (option.votes.length / totalVotes > 0.5 ? 'winner border-success' : 'border-danger'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, option.votes.includes(authedUser) && /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, \"Your Pick\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left font-weight-bold question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, option.text), /*#__PURE__*/React.createElement(ProgressBar, {\n    className: \"my-2\",\n    now: option.votes.length / totalVotes * 100,\n    label: totalVotes !== 0 ? `${(option.votes.length / totalVotes * 100).toFixed(2)}%` : '0%',\n    variant: option.votes.length / totalVotes >= 0.5 ? 'success' : 'danger',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-weight-bold question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, `${option.votes.length} out of ${totalVotes} votes`))));\n};\n\nfunction mapStateToProps({\n  authedUser\n}) {\n  return {\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionData);","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-React-WouldYouRather/src/components/QuestionData.js"],"names":["React","connect","Container","Row","Col","ProgressBar","Badge","QuestionData","option","totalVotes","authedUser","votes","length","includes","text","toFixed","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,WAA9B,EAA2CC,KAA3C,QAAwD,iBAAxD;AAEA,OAAO,2BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAD,KAAsC;AACvD,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AACI,IAAA,SAAS,EAAE,8BAA8BF,MAAM,CAACG,KAAP,CAAaC,MAAb,GAAoBH,UAApB,GAAiC,GAAjC,GACnC,uBADmC,GAEnC,eAFK,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQD,MAAM,CAACG,KAAP,CAAaE,QAAb,CAAsBH,UAAtB,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CAPZ,eAcI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DF,MAAM,CAACM,IAAlE,CADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AACa,IAAA,GAAG,EAAEN,MAAM,CAACG,KAAP,CAAaC,MAAb,GAAoBH,UAApB,GAA+B,GADjD;AAEa,IAAA,KAAK,EAAGA,UAAU,KAAK,CAAhB,GACA,GAAE,CAACD,MAAM,CAACG,KAAP,CAAaC,MAAb,GAAoBH,UAApB,GAA+B,GAAhC,EAAqCM,OAArC,CAA6C,CAA7C,CAAgD,GADlD,GAED,IAJnB;AAKa,IAAA,OAAO,EACHP,MAAM,CAACG,KAAP,CAAaC,MAAb,GAAoBH,UAApB,IAAkC,GAAlC,GACK,SADL,GAEM,QARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAYI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,GAAED,MAAM,CAACG,KAAP,CAAaC,MAAO,WAAUH,UAAW,QADjD,CAZJ,CADJ,CAdJ,CADJ;AAkCH,CAnCD;;AAqCA,SAASO,eAAT,CAAyB;AAACN,EAAAA;AAAD,CAAzB,EAAuC;AACnC,SAAO;AACHA,IAAAA;AADG,GAAP;AAGH;;AAED,eAAeT,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row, Col, ProgressBar, Badge } from 'react-bootstrap';\r\n\r\nimport './styles/QuestionData.css';\r\n\r\nconst QuestionData = ({option, totalVotes, authedUser}) => {\r\n    return (\r\n        <Container fluid\r\n            className={'border rounded my-3 p-3 ' + (option.votes.length/totalVotes > 0.5\r\n                ? 'winner border-success'\r\n                : 'border-danger')}>\r\n\r\n            {\r\n                option.votes.includes(authedUser) &&\r\n                    <Row className='mb-2'>\r\n                        <Col className='d-flex justify-content-end'>\r\n                            <Badge variant='secondary'>Your Pick</Badge>\r\n                        </Col>\r\n                    </Row>\r\n            }\r\n\r\n            <Row>\r\n                <Col>\r\n                    <div className='text-left font-weight-bold question-text'>{option.text}</div>\r\n                    <ProgressBar className='my-2'\r\n                                 now={option.votes.length/totalVotes*100}\r\n                                 label={(totalVotes !== 0)\r\n                                     ? `${(option.votes.length/totalVotes*100).toFixed(2)}%`\r\n                                     : '0%'}\r\n                                 variant={\r\n                                     option.votes.length/totalVotes >= 0.5\r\n                                        ? 'success'\r\n                                         : 'danger'\r\n                                 } />\r\n                    <div className='font-weight-bold question-count'>\r\n                        {`${option.votes.length} out of ${totalVotes} votes`}</div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({authedUser}) {\r\n    return {\r\n        authedUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionData);"]},"metadata":{},"sourceType":"module"}