{"ast":null,"code":"var _jsxFileName = \"/Users/carlbrunson/Documents/Code/Udacity-React-WouldYouRather/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Question from './Question';\nimport './styles/Home.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'selectedTab': 0\n    };\n  }\n\n  changeTab(tabNo) {\n    if (this.state.selectedTab === tabNo) {\n      return;\n    }\n\n    this.setState(() => ({\n      'selectedTab': tabNo\n    }));\n  }\n\n  render() {\n    const UNANSWERED_TAB = 0;\n    const ANSWERED_TAB = 1;\n    const {\n      selectedTab\n    } = this.state;\n    const {\n      answeredIds,\n      unansweredIds\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"content-container rounded non-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"unanswered-tab px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.changeTab(UNANSWERED_TAB),\n      className: 'tab-button-left py-3 w-100 font-weight-bold ' + (selectedTab === 0 ? 'bg-light text-primary' : 'bg-white text-dark'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Unanswered Questions\")), /*#__PURE__*/React.createElement(Col, {\n      className: \"answered-tab px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.changeTab(ANSWERED_TAB),\n      className: 'py-3 tab-button-right w-100 font-weight-bold ' + (selectedTab === 1 ? 'bg-light text-primary' : 'bg-white text-dark'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Answered Questions\"))), selectedTab === 0 && /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"mx-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, unansweredIds.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }\n    }, unansweredIds.map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      id: id,\n      answered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 53\n      }\n    })))) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 39\n      }\n    }, \"No unanswered questions\"))), selectedTab === 1 && /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"mx-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, answeredIds.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 39\n      }\n    }, answeredIds.map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      id: id,\n      answered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 53\n      }\n    })))) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 39\n      }\n    }, \"No answered questions\"))));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser,\n  users\n}) {\n  const answeredIds = Object.keys(users[authedUser].answers).sort((a, b) => users[authedUser].answers[b].timestamp - users[authedUser].answers[a].timestamp);\n  const unansweredIds = Object.keys(questions).filter(questionId => !answeredIds.includes(questionId)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    answeredIds: answeredIds,\n    unansweredIds: unansweredIds,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/carlbrunson/Documents/Code/Udacity-React-WouldYouRather/src/components/Home.js"],"names":["React","Component","connect","Container","Row","Col","Button","Question","Home","constructor","props","state","changeTab","tabNo","selectedTab","setState","render","UNANSWERED_TAB","ANSWERED_TAB","answeredIds","unansweredIds","length","map","id","mapStateToProps","questions","authedUser","users","Object","keys","answers","sort","a","b","timestamp","filter","questionId","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport Question from './Question';\r\n\r\nimport './styles/Home.css';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'selectedTab' : 0\r\n        }\r\n    }\r\n\r\n    changeTab(tabNo) {\r\n        if (this.state.selectedTab === tabNo) {\r\n            return;\r\n        }\r\n\r\n        this.setState(() => (\r\n            {'selectedTab': tabNo}\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        const UNANSWERED_TAB = 0;\r\n        const ANSWERED_TAB = 1;\r\n\r\n        const { selectedTab } = this.state;\r\n        const { answeredIds, unansweredIds } = this.props;\r\n\r\n        return (\r\n            <Container className='content-container rounded non-responsive'>\r\n                <Row className='border-bottom'>\r\n                    <Col className='unanswered-tab px-0'>\r\n                        <Button onClick={() => this.changeTab(UNANSWERED_TAB)}\r\n                                className={'tab-button-left py-3 w-100 font-weight-bold ' + (selectedTab === 0\r\n                                    ? 'bg-light text-primary'\r\n                                    : 'bg-white text-dark')}>\r\n                            Unanswered Questions\r\n                        </Button>\r\n                    </Col>\r\n                    <Col className='answered-tab px-0'>\r\n                        <Button onClick={() => this.changeTab(ANSWERED_TAB)}\r\n                                className={'py-3 tab-button-right w-100 font-weight-bold ' + (selectedTab === 1\r\n                                    ? 'bg-light text-primary'\r\n                                    : 'bg-white text-dark')}>\r\n                            Answered Questions\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    selectedTab === 0 &&\r\n                    <Row>\r\n                        <Col className='mx-5'>\r\n                            {\r\n                                unansweredIds.length > 0\r\n                                    ? <ul className='pl-0'>\r\n                                        {\r\n                                            unansweredIds.map((id) => (\r\n                                                <li key={id}>\r\n                                                    <Question id={id} answered={false} />\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                    : <h4>No unanswered questions</h4>\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                {\r\n                    selectedTab === 1 &&\r\n                    <Row>\r\n                        <Col className='mx-5'>\r\n                            {\r\n                                answeredIds.length > 0\r\n                                    ? <ul className='pl-0'>\r\n                                        {\r\n                                            answeredIds.map((id) => (\r\n                                                <li key={id}>\r\n                                                    <Question id={id} answered={true} />\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                    : <h4>No answered questions</h4>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ questions, authedUser, users }) {\r\n    const answeredIds = Object.keys(users[authedUser].answers)\r\n        .sort((a, b) => (\r\n            users[authedUser].answers[b].timestamp - users[authedUser].answers[a].timestamp\r\n        ));\r\n\r\n    const unansweredIds = Object.keys(questions).filter((questionId) => (\r\n            !answeredIds.includes(questionId)\r\n        )).sort((a, b) => (\r\n            questions[b].timestamp - questions[a].timestamp\r\n        ));\r\n\r\n    return {\r\n        answeredIds: answeredIds,\r\n        unansweredIds: unansweredIds ,\r\n        authedUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}