{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.LoadingBar = exports.TERMINATING_ANIMATION_DURATION = exports.ANIMATION_DURATION = exports.PROGRESS_INCREASE = exports.MAX_PROGRESS = exports.UPDATE_TIME = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _loading_bar_ducks = require(\"./loading_bar_ducks\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar UPDATE_TIME = 400;\nexports.UPDATE_TIME = UPDATE_TIME;\nvar MAX_PROGRESS = 99;\nexports.MAX_PROGRESS = MAX_PROGRESS;\nvar PROGRESS_INCREASE = 20;\nexports.PROGRESS_INCREASE = PROGRESS_INCREASE;\nvar ANIMATION_DURATION = UPDATE_TIME * 2;\nexports.ANIMATION_DURATION = ANIMATION_DURATION;\nvar TERMINATING_ANIMATION_DURATION = UPDATE_TIME / 2;\nexports.TERMINATING_ANIMATION_DURATION = TERMINATING_ANIMATION_DURATION;\nvar initialState = {\n  percent: 0,\n  status: 'hidden'\n};\n\nvar LoadingBar = /*#__PURE__*/function (_Component) {\n  _inherits(LoadingBar, _Component);\n\n  function LoadingBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoadingBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoadingBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, initialState);\n\n    _this.reset = function () {\n      _this.terminatingAnimationTimeoutId = null;\n\n      _this.setState(initialState);\n    };\n\n    _this.newPercent = function (percent, progressIncrease) {\n      // Use cosine as a smoothing function\n      // It could be any function to slow down progress near the ending 100%\n      var smoothedProgressIncrease = progressIncrease * Math.cos(percent * (Math.PI / 2 / 100));\n      return percent + smoothedProgressIncrease;\n    };\n\n    _this.simulateProgress = function () {\n      _this.setState(function (prevState, _ref) {\n        var maxProgress = _ref.maxProgress,\n            progressIncrease = _ref.progressIncrease;\n        var percent = prevState.percent;\n\n        var newPercent = _this.newPercent(percent, progressIncrease);\n\n        if (newPercent <= maxProgress) {\n          percent = newPercent;\n        }\n\n        return {\n          percent: percent\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var status = this.state.status;\n\n      if (status === 'starting') {\n        this.start();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var status = this.state.status;\n\n      if (prevState.status !== status) {\n        if (status === 'starting') {\n          this.start();\n        }\n\n        if (status === 'stopping') {\n          this.stop();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.progressIntervalId);\n      clearTimeout(this.terminatingAnimationTimeoutId);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      // There could be previous termination animation going, so we need to\n      // cancel it and forcefully reset the Loading Bar before starting\n      // the progress simulation from 0\n      if (this.terminatingAnimationTimeoutId) {\n        clearTimeout(this.terminatingAnimationTimeoutId);\n        this.reset();\n      }\n\n      var updateTime = this.props.updateTime;\n      this.progressIntervalId = setInterval(this.simulateProgress, updateTime);\n      this.setState({\n        status: 'running'\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var showFastActions = this.props.showFastActions;\n      clearInterval(this.progressIntervalId);\n      this.progressIntervalId = null;\n      var terminatingAnimationDuration = this.isShown() || showFastActions ? TERMINATING_ANIMATION_DURATION : 0;\n      this.terminatingAnimationTimeoutId = setTimeout(this.reset, terminatingAnimationDuration);\n      this.setState({\n        percent: 100\n      });\n    }\n  }, {\n    key: \"isShown\",\n    value: function isShown() {\n      var percent = this.state.percent;\n      return percent > 0 && percent <= 100;\n    }\n  }, {\n    key: \"buildStyle\",\n    value: function buildStyle() {\n      var _this$state = this.state,\n          status = _this$state.status,\n          percent = _this$state.percent;\n      var _this$props = this.props,\n          direction = _this$props.direction,\n          className = _this$props.className,\n          customStyle = _this$props.style;\n      var animationDuration = status === 'stopping' ? TERMINATING_ANIMATION_DURATION : ANIMATION_DURATION;\n      var coefficient = direction === 'rtl' ? 1 : -1;\n      var tx = (100 - percent) * coefficient;\n      var style = {\n        opacity: '1',\n        transform: \"translate3d(\".concat(tx, \"%, 0px, 0px)\"),\n        msTransform: \"translate3d(\".concat(tx, \"%, 0px, 0px)\"),\n        WebkitTransform: \"translate3d(\".concat(tx, \"%, 0px, 0px)\"),\n        MozTransform: \"translate3d(\".concat(tx, \"%, 0px, 0px)\"),\n        OTransform: \"translate3d(\".concat(tx, \"%, 0px, 0px)\"),\n        transition: \"transform \".concat(animationDuration, \"ms linear 0s\"),\n        msTransition: \"-ms-transform \".concat(animationDuration, \"ms linear 0s\"),\n        WebkitTransition: \"-webkit-transform \".concat(animationDuration, \"ms linear 0s\"),\n        MozTransition: \"-moz-transform \".concat(animationDuration, \"ms linear 0s\"),\n        OTransition: \"-o-transform \".concat(animationDuration, \"ms linear 0s\"),\n        width: '100%',\n        willChange: 'transform, opacity'\n      }; // Use default styling if there's no CSS class applied\n\n      if (!className) {\n        style.height = '3px';\n        style.backgroundColor = 'red';\n        style.position = 'absolute';\n      }\n\n      if (this.isShown()) {\n        style.opacity = '1';\n      } else {\n        style.opacity = '0';\n      }\n\n      return _objectSpread({}, style, {}, customStyle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status = this.state.status;\n      var className = this.props.className;\n\n      if (status === 'hidden') {\n        return _react[\"default\"].createElement(\"div\", null);\n      }\n\n      return _react[\"default\"].createElement(\"div\", null, _react[\"default\"].createElement(\"div\", {\n        style: this.buildStyle(),\n        className: className\n      }), _react[\"default\"].createElement(\"div\", {\n        style: {\n          display: 'table',\n          clear: 'both'\n        }\n      }));\n    }\n  }], [{\n    key: \"shouldStart\",\n    value: function shouldStart(props, state) {\n      return props.loading > 0 && ['hidden', 'stopping'].indexOf(state.status) >= 0;\n    }\n  }, {\n    key: \"shouldStop\",\n    value: function shouldStop(props, state) {\n      return props.loading === 0 && ['starting', 'running'].indexOf(state.status) >= 0;\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (LoadingBar.shouldStart(nextProps, prevState)) {\n        return {\n          status: 'starting'\n        };\n      }\n\n      if (LoadingBar.shouldStop(nextProps, prevState)) {\n        return {\n          status: 'stopping'\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return LoadingBar;\n}(_react.Component);\n\nexports.LoadingBar = LoadingBar;\nLoadingBar.propTypes = {\n  className: _propTypes.string,\n  direction: _propTypes.string,\n  loading: _propTypes.number,\n  maxProgress: _propTypes.number,\n  progressIncrease: _propTypes.number,\n  scope: _propTypes.string,\n  showFastActions: _propTypes.bool,\n  style: _propTypes.object,\n  updateTime: _propTypes.number\n};\nLoadingBar.defaultProps = {\n  className: '',\n  direction: 'ltr',\n  loading: 0,\n  maxProgress: MAX_PROGRESS,\n  progressIncrease: PROGRESS_INCREASE,\n  scope: _loading_bar_ducks.DEFAULT_SCOPE,\n  showFastActions: false,\n  style: {},\n  updateTime: UPDATE_TIME\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    loading: state.loadingBar[ownProps.scope || _loading_bar_ducks.DEFAULT_SCOPE]\n  };\n};\n\n(0, _reactLifecyclesCompat.polyfill)(LoadingBar);\nvar ConnectedLoadingBar = (0, _reactRedux.connect)(mapStateToProps)(LoadingBar);\nexports[\"default\"] = ConnectedLoadingBar;","map":null,"metadata":{},"sourceType":"script"}